# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Validate and Preview

on:
  pull_request:
    types:
      - ready_for_review
      - opened
      - synchronize
      - reopened
      - labeled
      - unlabeled
  workflow_dispatch:

jobs:
  preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - name: Install & Build
        run: |
          yarn
          cd ./infra && yarn

      - name: Download pulumi
        shell: bash
        id: prep
        run: |
          curl -fsSL https://get.pulumi.com | sh

      - name: Pulumi login
        shell: bash
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        run: |
          pulumi login

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: |
            {
              "clientId": "${{ secrets.CI_TEST_CLIENT_ID }}",
              "clientSecret": "${{ secrets.CI_TEST_CLIENT_SECRET }}",
              "subscriptionId": "${{ secrets.CI_SUBSCRIPTION_ID }}",
              "tenantId": "${{ secrets.CI_TENANT_ID }}"
            }

      - name: Deploy with Pulumi
        run: |
          cd ./infra
          yarn
          pulumi stack select main
          pulumi config set azure-native:clientId ${{ secrets.CI_TEST_CLIENT_ID }}
          pulumi config set azure-native:clientSecret ${{ secrets.CI_TEST_CLIENT_SECRET }} --secret
          pulumi config set azure-native:tenantId ${{ secrets.CI_TENANT_ID }}
          pulumi config set azure-native:subscriptionId ${{ secrets.CI_SUBSCRIPTION_ID }}
          pulumi up -y
          echo "APP_NAME=$(pulumi stack output apiAppName)" >> $GITHUB_ENV
          echo "RESOURCE_GROUP=$(pulumi stack output apiResourceGroupName)" >> $GITHUB_ENV

      - name: Azure retrieve publish profile
        uses: azure/CLI@v1
        env:
          APP_NAME: ${{ env.APP_NAME }}
          RESOURCE_GROUP: ${{ env.RESOURCE_GROUP }}
        with:
          azcliversion: 2.30.0
          inlineScript: |
            PROFILE=$(az webapp deployment list-publishing-profiles --name "$APP_NAME" --resource-group "$RESOURCE_GROUP" --xml --output tsv)
            echo PROFILE EXTRACTED
            echo "PUBLISH_PROFILE=$PROFILE" >> $GITHUB_ENV

      - name: Remove infra before deployment
        run: rm -rf ./infra

      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: "${{ env.APP_NAME }}"
          slot-name: "production"
          publish-profile: "${{ env.PUBLISH_PROFILE }}"
          package: .
